spring.application.name=Richkware-Manager-Server

spring.main.banner-mode=off

#default secured port (Spring will open it automatically)
server.port=443
#additional HTTP port (TomcatWebServerCustomizer)
server.http.port=8080
server.servlet.session.timeout=30m
#server.compression.enabled=false
server.error.whitelabel.enabled=false
server.error.path=/error

#MYSQL_HOST=
# uncomment to disable mysql and enable H2
spring.datasource.url=jdbc:mysql://${MYSQL_HOST:localhost}:3306/richkware
spring.datasource.username=root
spring.datasource.password=richk
# SQL is written to be idempotent so this is safe
spring.datasource.initialization-mode=always
#spring.datasource.schema=classpath*:db/schema.sql
#spring.datasource.data=classpath*:db/data.sql

# JPA - automatic operations on schema
spring.jpa.hibernate.ddl-auto=update
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
#spring.jpa.open-in-view=false

# Logging
logging.level.org.springframework=INFO
# logging.level.org.springframework.web=DEBUG
# logging.level.org.springframework.context.annotation=TRACE
# Show or not log for each sql query
spring.jpa.show-sql = false

# Maximum time static resources should be cached
#spring.resources.cache.cachecontrol.max-age=12h

# Security
server.ssl.enabled=true
# The format used for the keystore. It could be set to JKS in case it is a JKS file
server.ssl.key-store-type=PKCS12
# The path to the keystore containing the certificate
server.ssl.key-store=classpath:keystore/rms.p12
# The password used to generate the certificate
server.ssl.key-store-password=richkware
# The alias mapped to the certificate
server.ssl.key-alias=rms
# configure application to accept only HTTPS request
# security.require-ssl=true
server.ssl.key-password=richkware